services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: messaging_system
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d messaging_system"]
      interval: 30s
      timeout: 10s
      retries: 3

  rabbitmq:
    image: rabbitmq:3.12-management
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: pass
    ports:
      - "5672:5672"
      - "15672:15672"  # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 3

  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_URL=amqp://user:pass@rabbitmq:5672/
      - DATABASE_URL=postgres://user:pass@postgres:5432/messaging_system?sslmode=disable
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8080
      - WORKERS=3
      - LOGGING_LEVEL=info
      - GRACEFUL_SHUTDOWN_TIMEOUT=30s
    volumes:
      - ./config.yaml:/app/config.yaml:ro
    restart: unless-stopped

volumes:
  postgres_data:
  rabbitmq_data: